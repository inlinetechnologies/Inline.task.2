
package ru.mts.tender.inline.foris.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.0
 * 
 */
@WebServiceClient(name = "ForisWS", targetNamespace = "http://synch.inline.tender.mts.ru/", wsdlLocation = "file:/K:/dvp/projects/nb_projects/Inline.task.2/Inline.task.2/src/main/resources/META-INF/wsdl/ForisWS_1.wsdl")
public class ForisWS_Service
    extends Service
{

    private final static URL FORISWS_WSDL_LOCATION;
    private final static WebServiceException FORISWS_EXCEPTION;
    private final static QName FORISWS_QNAME = new QName("http://synch.inline.tender.mts.ru/", "ForisWS");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/K:/dvp/projects/nb_projects/Inline.task.2/Inline.task.2/src/main/resources/META-INF/wsdl/ForisWS_1.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        FORISWS_WSDL_LOCATION = url;
        FORISWS_EXCEPTION = e;
    }

    public ForisWS_Service() {
        super(__getWsdlLocation(), FORISWS_QNAME);
    }

    public ForisWS_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns ForisWS
     */
    @WebEndpoint(name = "ForisWSPort")
    public ForisWS getForisWSPort() {
        return super.getPort(new QName("http://synch.inline.tender.mts.ru/", "ForisWSPort"), ForisWS.class);
    }

    private static URL __getWsdlLocation() {
        if (FORISWS_EXCEPTION!= null) {
            throw FORISWS_EXCEPTION;
        }
        return FORISWS_WSDL_LOCATION;
    }

}
